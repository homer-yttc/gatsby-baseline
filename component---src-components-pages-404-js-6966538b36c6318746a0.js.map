{"version":3,"sources":["webpack:///./src/components/pages/404.js","webpack:///./site-settings.js","webpack:///./src/lib/state/useSiteMetadata.js","webpack:///./src/components/layout/Header/Header.js","webpack:///./src/components/meta/SEO/SEO.js","webpack:///./src/components/layout/Layout/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layout_Layout_Layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","pageTitle","process","srcPath","cwd","compPath","libPath","URL","NETLIFY_SITE_URL","DEPLOY_PRIME_URL","CONTEXT","siteUrl","NODE_ENV","module","exports","manifest","name","short_name","lang","description","start_url","background_color","theme_color","display","icon","siteMetadata","title","author","srcPaths","src","styles","lib","@hooks","@layout","@pages","@meta","@media","useSiteMetadata","data","_856328897","site","Header","_ref","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","defaultProps","SEO","meta","metaDescription","Helmet","htmlAttributes","titleTemplate","content","property","concat","Layout","children","Fragment","SEO_SEO","layout_Header_Header","className","Date","getFullYear","href"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAUeO,UAPM,kBACnBH,EAAAI,EAAAC,cAACH,EAAA,EAAD,CAAQI,UAAU,kBAChBN,EAAAI,EAAAC,cAAA,uBACAL,EAAAI,EAAAC,cAAA,qLCNJ,SAAAE,GAAA,IAAMC,EAAaD,EAAQE,MAAd,OACPC,EAAcF,EAAN,cACRG,EAAaH,EAAN,SAQTD,OAHFK,IAAKC,aAHO,8BAIZC,qBACAC,QAGIC,EADiC,6BALrCC,YAMoCJ,aAJGA,IAMzCK,EAAOC,QAAU,CACfC,SAAU,CACRC,KAAI,yBACJC,WAAU,UACVC,KAAI,KACJC,YAAW,qBACXC,UAAS,IACTC,iBAAgB,UAChBC,YAAW,UACXC,QAAO,aACPC,KAAI,qCAENC,aAAc,CACZd,QAASA,GAvBC,wBAwBVe,MAAK,yBACLP,YAAW,4JACXQ,OAAM,aAERC,SAAU,CACRC,IAAK1B,EACL2B,OAAW3B,EAAL,UACN4B,IAAKzB,EACL0B,SAAa1B,EAAb,SACA2B,UAAc5B,EAAd,UACA6B,SAAa7B,EAAb,SACA8B,QAAY9B,EAAZ,QACA+B,SAAa/B,EAAb,uGClBWgC,EAdS,WACtB,IAAMC,EAAOC,EAAAD,KAUb,OAAOA,EAAOA,EAAKE,KAAKf,aAAeA,wBCfnCgB,EAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACbC,EAAA7C,EAAAC,cAAA,UACE6C,MAAO,CACLC,WAAU,gBACVC,aAAY,YAGdH,EAAA7C,EAAAC,cAAA,OACE6C,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,sBAGTN,EAAA7C,EAAAC,cAAA,MAAI6C,MAAO,CAAEG,OAAQ,IACnBJ,EAAA7C,EAAAC,cAACmD,EAAA,KAAD,CACEC,GAAG,IACHP,MAAO,CACLQ,MAAK,QACLC,eAAc,SAGfX,OAWXF,EAAOc,aAAe,CACpBZ,UAAS,IAGIF,iBC7Bf,SAASe,EAATd,GAAiD,IAAlCvB,EAAkCuB,EAAlCvB,YAAaD,EAAqBwB,EAArBxB,KAAMuC,EAAef,EAAfe,KAAM/B,EAASgB,EAAThB,MAChCD,EAAeY,IACfqB,EAAkBvC,GAAeM,EAAaN,YAEpD,OACEyB,EAAA7C,EAAAC,cAAC2D,EAAA,OAAD,CACEC,eAAgB,CACd1C,QAEFQ,MAAOA,EACPmC,cAAa,QAAUpC,EAAaC,MACpC+B,KAAM,CACJ,CACEzC,KAAI,cACJ8C,QAASJ,GAEX,CACEK,SAAQ,WACRD,QAASpC,GAEX,CACEqC,SAAQ,iBACRD,QAASJ,GAEX,CACEK,SAAQ,UACRD,QAAO,WAET,CACE9C,KAAI,eACJ8C,QAAO,WAET,CACE9C,KAAI,kBACJ8C,QAASrC,EAAaE,QAExB,CACEX,KAAI,gBACJ8C,QAASpC,GAEX,CACEV,KAAI,sBACJ8C,QAASJ,IAEXM,OAAOP,KAKfD,EAAID,aAAe,CACjBrC,KAAI,KACJuC,KAAM,GACNtC,YAAW,IAUEqC,sBC/BAS,IAxBA,SAAAvB,GAA6B,IAA1BzC,EAA0ByC,EAA1BzC,UAAWiE,EAAexB,EAAfwB,SACnBxC,EAAUW,IAAVX,MAER,OACEkB,EAAA7C,EAAAC,cAAA4C,EAAA7C,EAAAoE,SAAA,KACEvB,EAAA7C,EAAAC,cAACoE,EAAD,CAAK1C,MAAOzB,IACZ2C,EAAA7C,EAAAC,cAACqE,EAAD,CAAQ1B,UAAWjB,IACnBkB,EAAA7C,EAAAC,cAAA,OAAKsE,UAAU,gBACb1B,EAAA7C,EAAAC,cAAA,YAAOkE,GACPtB,EAAA7C,EAAAC,cAAA,oBACK,IAAIuE,MAAOC,cADhB,mBAGE5B,EAAA7C,EAAAC,cAAA,KAAGyE,KAAK,4BAAR","file":"component---src-components-pages-404-js-6966538b36c6318746a0.js","sourcesContent":["import React from 'react'\nimport Layout from '../layout/Layout/Layout'\n\nconst NotFoundPage = () => (\n  <Layout pageTitle=\"404: Not found\">\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const srcPath = `${process.cwd()}/src`\nconst compPath = `${srcPath}/components`\nconst libPath = `${srcPath}/lib`\n\nconst fallBack = `http://localhost:8000`\nconst {\n  NODE_ENV,\n  URL: NETLIFY_SITE_URL = fallBack,\n  DEPLOY_PRIME_URL: NETLIFY_DEPLOY_URL = NETLIFY_SITE_URL,\n  CONTEXT: NETLIFY_ENV = NODE_ENV,\n} = process.env\nconst isNetlifyProduction = NETLIFY_ENV === `production`\nconst siteUrl = isNetlifyProduction ? NETLIFY_SITE_URL : NETLIFY_DEPLOY_URL\n\nmodule.exports = {\n  manifest: {\n    name: `gatsby-starter-default`,\n    short_name: `starter`,\n    lang: `en`,\n    description: `A new gatsby site.`,\n    start_url: `/`,\n    background_color: `#663399`,\n    theme_color: `#663399`,\n    display: `minimal-ui`,\n    icon: `src/assets/images/gatsby-icon.png`, // This path is relative to the root of the site.}\n  },\n  siteMetadata: {\n    siteUrl: siteUrl || fallBack,\n    title: `Gatsby Default Starter`,\n    description: `Kick off your next, great Gatsby project with this default starter. This barebones starter ships with the main Gatsby configuration files you might need.`,\n    author: `@gatsbyjs`,\n  },\n  srcPaths: {\n    src: srcPath,\n    styles: `${srcPath}/styles`,\n    lib: libPath,\n    '@hooks': `${libPath}/hooks`,\n    '@layout': `${compPath}/layout`,\n    '@pages': `${compPath}/pages`,\n    '@meta': `${compPath}/meta`,\n    '@media': `${compPath}/media`,\n  },\n}\n","import { graphql, useStaticQuery } from 'gatsby'\nimport { siteMetadata } from '../../../site-settings'\n\n/**\n * Retrieve site metadata, else use the original site settings as a fallback.\n *\n * @returns {any}\n */\nconst useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return data ? data.site.siteMetadata : siteMetadata\n}\n\nexport default useSiteMetadata\n","import { Link } from 'gatsby'\nimport * as PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport * as PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\nimport useSiteMetadata from '../../../lib/state/useSiteMetadata'\n\nfunction SEO({ description, lang, meta, title }) {\n  const siteMetadata = useSiteMetadata()\n  const metaDescription = description || siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n// Libs\nimport React from 'react'\nimport * as PropTypes from 'prop-types'\n// State\nimport useSiteMetadata from '../../../lib/state/useSiteMetadata'\n// Deps\nimport Header from '../Header/Header'\nimport SEO from '../../meta/SEO/SEO'\n// Assets\nimport './reset.css'\nimport './layout.scss'\n\nconst Layout = ({ pageTitle, children }) => {\n  const { title } = useSiteMetadata()\n\n  return (\n    <>\n      <SEO title={pageTitle}/>\n      <Header siteTitle={title}/>\n      <div className=\"main-wrapper\">\n        <main>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  pageTitle: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}