{"version":3,"sources":["webpack:///./src/components/pages/index.js","webpack:///./src/lib/console.js","webpack:///./site-settings.js","webpack:///./gatsby/env.js","webpack:///./src/lib/static/useSiteMetadata.js","webpack:///./src/components/layout/Header/Header.js","webpack:///./src/components/meta/SEO/SEO.js","webpack:///./src/components/layout/Layout/Layout.js","webpack:///./src/components/layout/Memoized/Memoized.js","webpack:///./src/lib/hooks/useWindow.js","webpack:///./src/samples/TransitionLinks/animations.js","webpack:///./src/samples/TransitionLinks/TransitionLinks.js","webpack:///./src/lib/hooks/Modal/Modal.js","webpack:///./src/lib/hooks/useModal.js","webpack:///./src/samples/Modal/Modal.js","webpack:///./src/samples/KitchenSink/KitchenSink.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layout_Memoized_Memoized__WEBPACK_IMPORTED_MODULE_1__","_layout_Layout_Layout__WEBPACK_IMPORTED_MODULE_2__","_samples_KitchenSink_KitchenSink__WEBPACK_IMPORTED_MODULE_3__","_lib_console__WEBPACK_IMPORTED_MODULE_4__","con","consoleBadge","consoleStyles","green","Homepage","a","createElement","deps","digest","log","pageTitle","once","badgee","config","enabled","process","styled","style","color","background","font-weight","border-radius","padding","margin","red","orange","white","label","define","debug","info","warn","error","Object","freeze","srcPath","cwd","compPath","libPath","SITE_URL","require","module","exports","manifest","name","short_name","lang","description","start_url","background_color","theme_color","display","icon","siteMetadata","siteUrl","title","author","srcPaths","src","styles","lib","@hooks","@layout","@pages","@meta","@media","envs","development","test","production","NODE_ENV","GHPAGES","GHPAGES_URL","URL","NETLIFY_SITE_URL","DEPLOY_PRIME_URL","NETLIFY_DEPLOY_URL","NETLIFY_ENV","CONTEXT","useSiteMetadata","data","_856328897","site","Header","_ref","siteTitle","react_default","className","gatsby_browser_entry","to","defaultProps","SEO","meta","metaDescription","Helmet","htmlAttributes","titleTemplate","content","property","concat","Layout","children","Fragment","SEO_SEO","layout_Header_Header","Date","getFullYear","href","lodash__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_2__","Memoized","useMemo","noop","propTypes","PropTypes","isRequired","useWindow","_useState","useState","win","setWin","window","verticalAnimation","transitionCover","layoutContents","direction","directionTo","directionFrom","seconds","length","TimelineMax","set","y","ease","Power1","easeInOut","opacity","easeIn","TransitionLinks","currentPath","setCurrentPath","_useState2","targetUrl","setTargetUrl","_useState3","setLayoutContents","_useState4","setTransitionCover","getLayoutContents","useCallback","getTransitionCover","useLayoutEffect","has","location","pathname","es","ref","AniLink_default","cover","paintDrip","hex","gatsby_plugin_transition_link_default","exit","trigger","_ref2","state","entry","delay","_ref3","node","staggerFrom","querySelectorAll","fadeInText","aria-label","role","_ref4","layoutTheme","gatsby_plugin_transition_link","position","top","left","width","height","transform","modalTypes","Modal","variant","submitModal","closeModal","Dialog","open","DialogTitle","id","DialogContent","DialogActions","Button","onClick","autoFocus","useModal","onClose","onSubmit","button","modalProps","_objectWithoutPropertiesLoose","modal","setModal","isFunction","triggerModal","hooks_Modal_Modal","assign","modalTrigger","_useModal","infoModal","infoModalButton","_useModal2","confirmModal","confirmModalButton","KitchenSink","samples_Modal_Modal","samples_TransitionLinks_TransitionLinks"],"mappings":"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","file":"component---src-components-pages-index-js-226b071e4d2c0dcf330a.js","sourcesContent":["import React from 'react'\nimport Memoized from '../layout/Memoized/Memoized'\nimport Layout from '../layout/Layout/Layout'\nimport KitchenSink from '../../samples/KitchenSink/KitchenSink'\nimport { consoleBadge, consoleStyles } from '../../lib/console'\n\nconst con = consoleBadge('Homepage', consoleStyles.green)\n\nconst Homepage = () => {\n  const digest = () => {\n    con.log('handle Homepage digest')\n  }\n\n  return (\n    <Memoized deps={[]} digest={digest}>\n      <Layout pageTitle=\"Home\">\n        <h1>Home</h1>\n        <KitchenSink />\n      </Layout>\n    </Memoized>\n  )\n}\n\nexport default Homepage\n","import badgee from 'badgee'\nimport { once } from 'lodash'\n\n// Set up and configure these elements only once.\nonce(() => {\n  badgee.config({\n    enabled: process.env.NODE_ENV !== 'production',\n    styled: true,\n  })\n\n  badgee.style('white', {\n    color: 'black',\n    background: 'white',\n    // 'font-size': '15px',\n    'font-weight': 'bold',\n    'border-radius': '2px',\n    padding: '1px 3px',\n    margin: '0 1px',\n  })\n})()\n\nexport const consoleStyles = {\n  green: 'green',\n  red: 'red',\n  orange: 'orange',\n  white: 'white',\n}\n\nexport const consoleBadge = (label = '', style = '') => {\n  const con = label && style ? badgee.define(label, style) : badgee\n  return {\n    log: con.log,\n    debug: con.log,\n    info: con.info,\n    warn: con.warn,\n    error: con.error,\n  }\n}\n\n// Export base as default\nexport default Object.freeze(consoleBadge())\n","const srcPath = `${process.cwd()}/src`\nconst compPath = `${srcPath}/components`\nconst libPath = `${srcPath}/lib`\n\nconst { SITE_URL } = require('./gatsby/env')\n\nmodule.exports = {\n  manifest: {\n    name: 'gatsby-starter-default',\n    short_name: 'starter',\n    lang: 'en',\n    description: 'A new gatsby site.',\n    start_url: SITE_URL,\n    background_color: '#663399',\n    theme_color: '#663399',\n    display: 'minimal-ui',\n    // This path is relative to the root of the site.\n    icon: 'src/assets/images/gatsby-icon.png',\n  },\n  siteMetadata: {\n    siteUrl: SITE_URL,\n    title: 'Gatsby Default Starter',\n    description:\n      'Kick off your next, great Gatsby project with this default starter. This barebones starter ships with the main Gatsby configuration files you might need.',\n    author: '@gatsbyjs',\n  },\n  srcPaths: {\n    src: srcPath,\n    styles: `${srcPath}/styles`,\n    lib: libPath,\n    '@hooks': `${libPath}/hooks`,\n    '@layout': `${compPath}/layout`,\n    '@pages': `${compPath}/pages`,\n    '@meta': `${compPath}/meta`,\n    '@media': `${compPath}/media`,\n  },\n}\n","/**\n * Extract and process any ENV variables required by gatsby build.\n *\n * @file\n */\n\n// The default fallback URL for development.\nconst fallBack = 'http://localhost:8000'\n\nconst envs = {\n  development: 'development',\n  test: 'test',\n  production: 'production',\n}\n\n// Attempt to pull the required variables out of the process.env, with defaults filled in\nconst {\n  NODE_ENV = envs.development,\n  GHPAGES = false,\n  GHPAGES_URL = '',\n  URL: NETLIFY_SITE_URL = fallBack,\n  DEPLOY_PRIME_URL: NETLIFY_DEPLOY_URL = NETLIFY_SITE_URL,\n  CONTEXT: NETLIFY_ENV,\n} = process.env\n\n// Check if we're on netlify, and if netlify is using the prod instance. If not, attempts to\n// fill in the netlify deploy URL for a given branch. Ultimately it uses the fallback URL in the\n// end.\nconst SITE_URL =\n  (GHPAGES && GHPAGES_URL) ||\n  (NETLIFY_ENV === 'production' ? NETLIFY_SITE_URL : NETLIFY_DEPLOY_URL) ||\n  fallBack\n\nmodule.exports = {\n  envs,\n  SITE_URL,\n  NODE_ENV,\n  NETLIFY_ENV,\n  NETLIFY_DEPLOY_URL,\n  GHPAGES,\n  GHPAGES_URL,\n}\n","import { graphql, useStaticQuery } from 'gatsby'\nimport { siteMetadata } from '../../../site-settings'\n\n/**\n * Retrieve site metadata, else use the original site settings as a fallback.\n *\n * @returns {any}\n */\nconst useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return data ? data.site.siteMetadata : siteMetadata\n}\n\nexport default useSiteMetadata\n","import { Link } from 'gatsby'\nimport * as PropTypes from 'prop-types'\nimport React from 'react'\nimport './_header.scss'\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"header\">\n    <div className=\"header-wrapper\">\n      <h1 className=\"header-title\">\n        <Link to=\"/\" className=\"header-link\">\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport * as PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\nimport useSiteMetadata from '../../../lib/static/useSiteMetadata'\n\nfunction SEO({ description, lang, meta, title }) {\n  const siteMetadata = useSiteMetadata()\n  const metaDescription = description || siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n// Libs\nimport React from 'react'\nimport * as PropTypes from 'prop-types'\n// State\nimport useSiteMetadata from '../../../lib/static/useSiteMetadata'\n// Deps\nimport Header from '../Header/Header'\nimport SEO from '../../meta/SEO/SEO'\n// Assets\nimport './reset.css'\nimport './_layout.scss'\n\nconst Layout = ({ children, pageTitle }) => {\n  const { title } = useSiteMetadata()\n\n  return (\n    <>\n      <SEO title={pageTitle} />\n      <Header siteTitle={title} />\n      <div className=\"main-wrapper\">\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.defaultProps = {}\n\nLayout.propTypes = {\n  pageTitle: PropTypes.string.isRequired,\n}\n\nexport default Layout\n","import { useMemo } from 'react'\nimport { noop } from 'lodash'\nimport * as PropTypes from 'prop-types'\n\nconst Memoized = ({ children, digest, deps }) => {\n  useMemo(digest, deps)\n  return useMemo(() => children, deps)\n}\n\nMemoized.defaultProps = {\n  deps: [],\n  digest: noop,\n}\n\nMemoized.propTypes = {\n  deps: PropTypes.arrayOf(PropTypes.any).isRequired,\n  digest: PropTypes.func,\n}\n\nexport default Memoized\n","import { useState } from 'react'\n\nconst useWindow = () => {\n  const [win, setWin] = useState()\n\n  if (!win && typeof window !== 'undefined') {\n    setWin(window)\n  }\n\n  return win\n}\n\nexport default useWindow\n","import { Power1, TimelineMax } from 'gsap'\n\nexport const verticalAnimation = (transitionCover, layoutContents, { length }, direction) => {\n  const directionTo = direction === 'up' ? '-100%' : '100%'\n  const directionFrom = direction === 'up' ? '100%' : '-100%'\n\n  // convert ms to s for gsap\n  const seconds = length\n\n  return new TimelineMax()\n    .set(transitionCover, { y: directionFrom })\n    .to(transitionCover, seconds / 2, {\n      y: '0%',\n      ease: Power1.easeInOut,\n    })\n    .set(layoutContents, { opacity: 0 })\n    .to(transitionCover, seconds / 2, {\n      y: directionTo,\n      ease: Power1.easeIn,\n    })\n}\n\nexport const fadeInText = (entry, node) =>\n  // eslint-disable-next-line implicit-arrow-linebreak\n  new TimelineMax().staggerFrom(\n    node.querySelectorAll('h2, p, a, pre'),\n    1,\n    {\n      opacity: 0,\n      y: '+=50',\n    },\n    0.1\n  )\n","import React, { useCallback, useLayoutEffect, useState } from 'react'\nimport { has } from 'lodash'\n// import * as PropTypes from 'prop-types'\nimport TransitionLink, { TransitionPortal } from 'gatsby-plugin-transition-link'\nimport AniLink from 'gatsby-plugin-transition-link/AniLink'\nimport { Location } from '@reach/router'\nimport useWindow from '../../lib/hooks/useWindow'\nimport { fadeInText, verticalAnimation } from './animations'\n\nconst TransitionLinks = () => {\n  const win = useWindow()\n\n  const [currentPath, setCurrentPath] = useState()\n  const [targetUrl, setTargetUrl] = useState('/')\n  const [layoutContents, setLayoutContents] = useState()\n  const [transitionCover, setTransitionCover] = useState()\n  const getLayoutContents = useCallback((n) => setLayoutContents(n), [])\n  const getTransitionCover = useCallback((n) => setTransitionCover(n), [])\n\n  useLayoutEffect(() => {\n    if (has(win, 'location.pathname')) {\n      // console.log('win', win, window.location.pathname, window.location.pathname === '/')\n      setTargetUrl(window.location.pathname === '/' ? '/page-2' : '/')\n      setCurrentPath(window.location.pathname)\n    }\n  }, [win])\n\n  return (\n    <Location>\n      {({ location }) => (\n        <>\n          <section ref={getLayoutContents}>\n            <div>\n              <h2>Transition Links</h2>\n              {currentPath && <span>Path: {location.pathname}</span>}\n              <br />\n              {targetUrl && <span>Target: {targetUrl}</span>}\n              <br />\n              <AniLink cover to={targetUrl} direction=\"right\">\n                Go to a page, with a cover right\n              </AniLink>\n              <br />\n              <AniLink paintDrip to={targetUrl} hex=\"#4b2571\">\n                Go to a page, with a paint drip\n              </AniLink>\n              <br />\n              <TransitionLink\n                to={targetUrl}\n                exit={{\n                  length: 1,\n                  trigger: ({ exit }) =>\n                    verticalAnimation(transitionCover, layoutContents, exit, 'down'),\n                  state: { test: 'exit state' },\n                }}\n                entry={{\n                  delay: 0.5,\n                  trigger: ({ entry, node }) => fadeInText(entry, node),\n                }}\n              >\n                Go to a page, that way{' '}\n                <span aria-label=\"pointing up\" role=\"img\">\n                  👇\n                </span>{' '}\n                and animate in the next page\n              </TransitionLink>\n              <br />\n              <TransitionLink\n                to={targetUrl}\n                exit={{\n                  length: 1.2,\n                  trigger: ({ exit }) =>\n                    verticalAnimation(transitionCover, layoutContents, exit, 'up'),\n                }}\n                entry={{\n                  delay: 0.5,\n                  length: 1,\n                  state: { layoutTheme: 'dark' },\n                }}\n              >\n                Go to a page, that way{' '}\n                <span aria-label=\"pointing up\" role=\"img\">\n                  ☝️\n                </span>\n                and give us a dark theme when we get there.\n              </TransitionLink>\n              <br />\n            </div>\n          </section>\n          <TransitionPortal>\n            <div\n              ref={getTransitionCover}\n              style={{\n                position: 'fixed',\n                background: '#4b2571',\n                top: 0,\n                left: 0,\n                width: '100vw',\n                height: '100vh',\n                transform: 'translateY(100%)',\n              }}\n            />\n          </TransitionPortal>\n        </>\n      )}\n    </Location>\n  )\n}\n\nTransitionLinks.defaultProps = {}\nTransitionLinks.propTypes = {}\n\nexport default TransitionLinks\n","import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core'\nimport * as PropTypes from 'prop-types'\nimport React from 'react'\n\nexport const modalTypes = {\n  info: 'info',\n  confirm: 'confirm',\n}\n\nconst Modal = ({ variant, title, content, submitModal, closeModal }) => (\n  // eslint-disable-next-line react/jsx-boolean-value\n  <Dialog open={true}>\n    <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n    <DialogContent>{content}</DialogContent>\n    <DialogActions>\n      {variant === modalTypes.confirm && (\n        <>\n          <Button color=\"primary\" onClick={submitModal}>\n            Yes, I agree\n          </Button>\n          <Button color=\"primary\" onClick={closeModal} autoFocus>\n            CANCEL\n          </Button>\n        </>\n      )}\n\n      {(!variant || variant === modalTypes.info) && (\n        <Button color=\"primary\" onClick={submitModal} autoFocus>\n          OK\n        </Button>\n      )}\n    </DialogActions>\n  </Dialog>\n)\n\nModal.defaultProps = {\n  submitModal: null,\n  closeModal: null,\n}\n\nModal.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  variant: PropTypes.string.isRequired,\n  submitModal: PropTypes.func,\n  closeModal: PropTypes.func,\n}\n\nexport default Modal\n","import React, { useState } from 'react'\nimport * as PropTypes from 'prop-types'\nimport { isFunction } from 'lodash'\nimport { Button } from '@material-ui/core'\nimport { consoleBadge, consoleStyles } from '../console'\nimport Modal, { modalTypes } from './Modal/Modal'\n\nconst con = consoleBadge('Modal', consoleStyles.white)\n\nconst useModal = ({ onClose, onSubmit, button, ...modalProps }) => {\n  const [modal, setModal] = useState()\n  const closeModal = () => {\n    con.log('modal closing')\n    setModal()\n    isFunction(onClose) && onClose()\n  }\n\n  const submitModal = () => {\n    con.log('modal submitting')\n    setModal()\n    isFunction(onSubmit) && onSubmit()\n  }\n\n  const triggerModal = () => {\n    setModal(<Modal {...modalProps} submitModal={submitModal} closeModal={closeModal} />)\n  }\n\n  const modalTrigger = <Button onClick={triggerModal}>{button}</Button>\n\n  return { modal, triggerModal, modalTrigger }\n}\n\nuseModal.propTypes = {\n  title: PropTypes.string,\n  content: PropTypes.string,\n  variant: PropTypes.string,\n  button: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n}\n\nexport default useModal\n\nexport { modalTypes }\n","import React from 'react'\nimport Memoized from '../../components/layout/Memoized/Memoized'\nimport useModal, { modalTypes } from '../../lib/hooks/useModal'\nimport { consoleBadge, consoleStyles } from '../../lib/console'\n\nconst con = consoleBadge('Modal', consoleStyles.white)\n\nconst Modal = () => {\n  const { modal: infoModal, modalTrigger: infoModalButton } = useModal({\n    button: 'Open Info Modal',\n    title: 'Info Modal',\n    content: (\n      <div>\n        <p>Testing this Info modal!</p>\n      </div>\n    ),\n    onClose: () => {\n      con.log('closing info modal')\n    },\n  })\n\n  const { modal: confirmModal, modalTrigger: confirmModalButton } = useModal({\n    button: 'Open Confirm Modal',\n    variant: modalTypes.confirm,\n    title: 'Confirm Modal',\n    content: (\n      <div>\n        <p>Testing this Confirm modal!</p>\n      </div>\n    ),\n    onClose: () => {\n      con.log('closing confirm modal')\n    },\n    onSubmit: () => {\n      con.log('submitting confirm modal')\n    },\n  })\n\n  const digest = () => {\n    con.log('handle modal samples digest')\n    con.log('modals', infoModal, confirmModal)\n  }\n\n  return (\n    <Memoized deps={[infoModal, confirmModal]} digest={digest}>\n      <h2>Modal Samples</h2>\n      {infoModalButton}\n      {infoModal}\n      <br />\n      <br />\n      {confirmModalButton}\n      {confirmModal}\n      <br />\n      <br />\n      <hr />\n    </Memoized>\n  )\n}\n\nexport default Modal\n","import React from 'react'\n// import * as PropTypes from 'prop-types'\nimport TransitionLinks from '../TransitionLinks/TransitionLinks'\nimport Modal from '../Modal/Modal'\n\nconst KitchenSink = () => {\n  return (\n    <div>\n      <Modal />\n      <TransitionLinks />\n    </div>\n  )\n}\n\nKitchenSink.defaultProps = {}\n\nKitchenSink.propTypes = {}\n\nexport default KitchenSink\n"],"sourceRoot":""}