{"version":3,"sources":["webpack:///./src/components/pages/index.js","webpack:///./src/components/meta/seo/seo.js","webpack:///./src/components/layout/header/header.js","webpack:///./src/components/layout/layout/layout.js","webpack:///./src/components/media/image/image.js","webpack:///./src/lib/hooks/useWindow.js","webpack:///./src/components/samples/transition-links/transition-links.js","webpack:///./src/components/samples/kitchen-sink/kitchen-sink.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layout_layout_layout__WEBPACK_IMPORTED_MODULE_1__","_meta_seo_seo__WEBPACK_IMPORTED_MODULE_2__","_samples_kitchen_sink_kitchen_sink__WEBPACK_IMPORTED_MODULE_3__","IndexPage","a","createElement","title","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Layout","children","_856328897","Fragment","header","className","Date","getFullYear","href","Image","_2969191536","gatsby_image_default","fluid","placeholderImage","childImageSharp","useWindow","useState","isUndefined","window","verticalAnimation","transitionCover","layoutContents","direction","directionTo","directionFrom","seconds","length","TimelineMax","set","y","ease","Power1","easeInOut","opacity","easeIn","TransitionLinks","_useState","currentPath","setCurrentPath","_useState2","setLayoutContents","_useState3","setTransitionCover","getLayoutContents","useCallback","getTransitionCover","targetUrl","location","pathname","useEffect","es","_ref2","ref","AniLink_default","cover","paintDrip","hex","gatsby_plugin_transition_link_default","exit","trigger","_ref3","state","test","entry","delay","_ref4","node","staggerFrom","querySelectorAll","aria-label","role","_ref5","layoutTheme","gatsby_plugin_transition_link","position","top","left","width","height","transform","KitchenSink","display","transition_links","image_image","htmlFor","id","type"],"mappings":"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","file":"component---src-components-pages-index-js-6d5e65aa2602ad142787.js","sourcesContent":["import React from 'react'\nimport Layout from '@layout/layout/layout'\nimport SEO from '@meta/seo/seo'\nimport KitchenSink from '../samples/kitchen-sink/kitchen-sink'\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <h1>Home</h1>\n    <KitchenSink />\n  </Layout>\n)\n\nexport default IndexPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport Header from '@layout/header/header'\nimport './reset.css'\nimport './layout.scss'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div className=\"main-wrapper\">\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Image\n","import { useState } from 'react'\nimport { isUndefined } from 'lodash'\n\nconst useWindow = () => {\n  const [win] = useState(!isUndefined(window) ? window : null)\n\n  return win\n}\n\nexport default useWindow\n","import React, { useCallback, useState, useEffect } from 'react'\nimport { isUndefined } from 'lodash'\nimport { TimelineMax, Power1 } from 'gsap'\n// import * as PropTypes from 'prop-types'\nimport TransitionLink, { TransitionPortal } from 'gatsby-plugin-transition-link'\nimport AniLink from 'gatsby-plugin-transition-link/AniLink'\nimport { Location } from '@reach/router'\nimport useWindow from '@hooks/useWindow'\n\nconst verticalAnimation = (transitionCover, layoutContents, { length }, direction) => {\n  const directionTo = direction === `up` ? `-100%` : `100%`\n  const directionFrom = direction === `up` ? `100%` : `-100%`\n\n  // convert ms to s for gsap\n  const seconds = length\n\n  return new TimelineMax()\n    .set(transitionCover, { y: directionFrom })\n    .to(transitionCover, seconds / 2, {\n      y: `0%`,\n      ease: Power1.easeInOut,\n    })\n    .set(layoutContents, { opacity: 0 })\n    .to(transitionCover, seconds / 2, {\n      y: directionTo,\n      ease: Power1.easeIn,\n    })\n}\n\nconst test = (entry, node) =>\n  // eslint-disable-next-line implicit-arrow-linebreak\n  new TimelineMax().staggerFrom(\n    node.querySelectorAll(`h2, p, a, pre`),\n    1,\n    {\n      opacity: 0,\n      y: `+=50`,\n    },\n    0.1\n  )\n\nconst TransitionLinks = () => {\n  const window = useWindow()\n  const [currentPath, setCurrentPath] = useState()\n  const [layoutContents, setLayoutContents] = useState()\n  const [transitionCover, setTransitionCover] = useState()\n  const getLayoutContents = useCallback((n) => setLayoutContents(n), [])\n  const getTransitionCover = useCallback((n) => setTransitionCover(n), [])\n  let targetUrl = `/`\n\n  if (!isUndefined(window)) {\n    targetUrl = window.location.pathname === `/` ? `/page-2` : `/`\n  }\n  useEffect(() => {\n    setCurrentPath(window.location.pathname)\n  }, [window])\n\n  return (\n    <Location>\n      {({ location }) => (\n        <>\n          <section ref={getLayoutContents}>\n            <div>\n              <h2>Transition Links</h2>\n              {currentPath && (<span>Path: {location.pathname}</span>)}<br/>\n              <AniLink cover to={targetUrl} direction=\"right\">\n                Go to a page, with a cover right\n              </AniLink>\n              <br/>\n              <AniLink paintDrip to={targetUrl} hex=\"#4b2571\">\n                Go to a page, with a paint drip\n              </AniLink>\n              <br/>\n              <TransitionLink\n                to={targetUrl}\n                exit={{\n                  length: 1,\n                  trigger: ({ exit }) =>\n                    verticalAnimation(transitionCover, layoutContents, exit, `down`),\n                  state: { test: `exit state` },\n                }}\n                entry={{\n                  delay: 0.5,\n                  trigger: ({ entry, node }) => test(entry, node),\n                }}\n              >\n                Go to a page, that way{` `}\n                <span aria-label=\"pointing up\" role=\"img\">\n                  👇\n                </span>\n                {` `}\n                and animate in the next page\n              </TransitionLink>\n              <br/>\n              <TransitionLink\n                to={targetUrl}\n                exit={{\n                  length: 1.2,\n                  trigger: ({ exit }) =>\n                    verticalAnimation(transitionCover, layoutContents, exit, `up`),\n                }}\n                entry={{\n                  delay: 0.5,\n                  length: 1,\n                  state: { layoutTheme: `dark` },\n                }}\n              >\n                Go to a page, that way{` `}\n                <span aria-label=\"pointing up\" role=\"img\">\n                  ☝️\n                </span>\n                and give us a dark theme when we get there.\n              </TransitionLink>\n              <br/>\n            </div>\n          </section>\n          <TransitionPortal>\n            <div\n              ref={getTransitionCover}\n              style={{\n                position: `fixed`,\n                background: `#4b2571`,\n                top: 0,\n                left: 0,\n                width: `100vw`,\n                height: `100vh`,\n                transform: `translateY(100%)`,\n              }}\n            />\n          </TransitionPortal>\n        </>\n      )}\n    </Location>\n  )\n}\n\nTransitionLinks.defaultProps = {}\nTransitionLinks.propTypes = {}\n\nexport default TransitionLinks\n","import React from 'react'\nimport * as PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport Image from '@media/image/image'\nimport TransitionLinks from '../transition-links/transition-links'\n\nconst KitchenSink = ({ display }) => {\n  if (display) {\n    // todo.\n  }\n\n  return (\n    <div>\n      <TransitionLinks />\n      <p>Welcome to your new Gatsby site.</p>\n      <p>Now go build something great.</p>\n      <div\n        style={{\n          maxWidth: `300px`,\n          marginBottom: `1.45rem`,\n        }}\n      >\n        <Image />\n      </div>\n      <label htmlFor=\"abc\">\n        <span>Abc</span>\n        <input id=\"abc\" type=\"text\" name=\"abc\" />\n      </label>\n      <Link to=\"/page-2/\">Go to page 2</Link>\n    </div>\n  )\n}\n\nKitchenSink.defaultProps = {\n  display: true,\n}\n\nKitchenSink.propTypes = {\n  display: PropTypes.bool,\n}\n\nexport default KitchenSink\n"],"sourceRoot":""}