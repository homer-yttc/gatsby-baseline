{"version":3,"sources":["webpack:///./src/components/pages/index.js","webpack:///./site-settings.js","webpack:///./src/lib/state/useSiteMetadata.js","webpack:///./src/components/layout/Header/Header.js","webpack:///./src/components/meta/SEO/SEO.js","webpack:///./src/components/layout/Layout/Layout.js","webpack:///./src/components/media/Image/Image.js","webpack:///./src/lib/hooks/useWindow.js","webpack:///./src/components/samples/TransitionLinks/animations.js","webpack:///./src/components/samples/TransitionLinks/TransitionLinks.js","webpack:///./src/components/samples/KitchenSink/KitchenSink.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layout_Layout_Layout__WEBPACK_IMPORTED_MODULE_1__","_samples_KitchenSink_KitchenSink__WEBPACK_IMPORTED_MODULE_2__","Homepage","a","createElement","pageTitle","process","srcPath","cwd","compPath","libPath","URL","NETLIFY_SITE_URL","DEPLOY_PRIME_URL","CONTEXT","siteUrl","NODE_ENV","module","exports","manifest","name","short_name","lang","description","start_url","background_color","theme_color","display","icon","siteMetadata","title","author","srcPaths","src","styles","lib","@hooks","@layout","@pages","@meta","@media","useSiteMetadata","data","_856328897","site","Header","_ref","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","defaultProps","SEO","meta","metaDescription","Helmet","htmlAttributes","titleTemplate","content","property","concat","Layout","children","Fragment","SEO_SEO","layout_Header_Header","className","Date","getFullYear","href","Image","_2969191536","gatsby_image_default","fluid","placeholderImage","childImageSharp","useWindow","_useState","useState","win","setWin","useLayoutEffect","window","e","verticalAnimation","transitionCover","layoutContents","direction","directionTo","directionFrom","seconds","length","TimelineMax","set","y","ease","Power1","easeInOut","opacity","easeIn","TransitionLinks","currentPath","setCurrentPath","_useState2","setLayoutContents","_useState3","setTransitionCover","getLayoutContents","useCallback","getTransitionCover","targetUrl","isUndefined","location","pathname","isObject","has","es","ref","AniLink_default","cover","paintDrip","hex","gatsby_plugin_transition_link_default","exit","trigger","_ref2","state","test","entry","delay","_ref3","node","staggerFrom","querySelectorAll","aria-label","role","_ref4","layoutTheme","gatsby_plugin_transition_link","position","top","left","width","height","transform","KitchenSink","samples_TransitionLinks_TransitionLinks","media_Image_Image","htmlFor","id","type"],"mappings":"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","file":"component---src-components-pages-index-js-398a726a805745028d81.js","sourcesContent":["import React from 'react'\nimport Layout from '../layout/Layout/Layout'\nimport KitchenSink from '../samples/KitchenSink/KitchenSink'\n\nconst Homepage = () => (\n  <Layout pageTitle=\"Home\">\n    <h1>Home</h1>\n    <KitchenSink/>\n  </Layout>\n)\n\nexport default Homepage\n","const srcPath = `${process.cwd()}/src`\nconst compPath = `${srcPath}/components`\nconst libPath = `${srcPath}/lib`\n\nconst fallBack = `http://localhost:8000`\nconst {\n  NODE_ENV,\n  URL: NETLIFY_SITE_URL = fallBack,\n  DEPLOY_PRIME_URL: NETLIFY_DEPLOY_URL = NETLIFY_SITE_URL,\n  CONTEXT: NETLIFY_ENV = NODE_ENV,\n} = process.env\nconst isNetlifyProduction = NETLIFY_ENV === `production`\nconst siteUrl = isNetlifyProduction ? NETLIFY_SITE_URL : NETLIFY_DEPLOY_URL\n\nmodule.exports = {\n  manifest: {\n    name: `gatsby-starter-default`,\n    short_name: `starter`,\n    lang: `en`,\n    description: `A new gatsby site.`,\n    start_url: `/`,\n    background_color: `#663399`,\n    theme_color: `#663399`,\n    display: `minimal-ui`,\n    icon: `src/assets/images/gatsby-icon.png`, // This path is relative to the root of the site.}\n  },\n  siteMetadata: {\n    siteUrl: siteUrl || fallBack,\n    title: `Gatsby Default Starter`,\n    description: `Kick off your next, great Gatsby project with this default starter. This barebones starter ships with the main Gatsby configuration files you might need.`,\n    author: `@gatsbyjs`,\n  },\n  srcPaths: {\n    src: srcPath,\n    styles: `${srcPath}/styles`,\n    lib: libPath,\n    '@hooks': `${libPath}/hooks`,\n    '@layout': `${compPath}/layout`,\n    '@pages': `${compPath}/pages`,\n    '@meta': `${compPath}/meta`,\n    '@media': `${compPath}/media`,\n  },\n}\n","import { graphql, useStaticQuery } from 'gatsby'\nimport { siteMetadata } from '../../../site-settings'\n\n/**\n * Retrieve site metadata, else use the original site settings as a fallback.\n *\n * @returns {any}\n */\nconst useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return data ? data.site.siteMetadata : siteMetadata\n}\n\nexport default useSiteMetadata\n","import { Link } from 'gatsby'\nimport * as PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport * as PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\nimport useSiteMetadata from '../../../lib/state/useSiteMetadata'\n\nfunction SEO({ description, lang, meta, title }) {\n  const siteMetadata = useSiteMetadata()\n  const metaDescription = description || siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n// Libs\nimport React from 'react'\nimport * as PropTypes from 'prop-types'\n// State\nimport useSiteMetadata from '../../../lib/state/useSiteMetadata'\n// Deps\nimport Header from '../Header/Header'\nimport SEO from '../../meta/SEO/SEO'\n// Assets\nimport './reset.css'\nimport './layout.scss'\n\nconst Layout = ({ pageTitle, children }) => {\n  const { title } = useSiteMetadata()\n\n  return (\n    <>\n      <SEO title={pageTitle}/>\n      <Header siteTitle={title}/>\n      <div className=\"main-wrapper\">\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  pageTitle: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Image\n","import { useState, useLayoutEffect } from 'react'\n\nconst useWindow = () => {\n  const [win, setWin] = useState()\n\n  useLayoutEffect(() => {\n    try {\n      setWin(window)\n    } catch (e) {\n      // Ignore.\n    }\n  }, [])\n\n  return win\n}\n\nexport default useWindow\n","import { Power1, TimelineMax } from 'gsap'\n\nexport const verticalAnimation = (transitionCover, layoutContents, { length }, direction) => {\n  const directionTo = direction === `up` ? `-100%` : `100%`\n  const directionFrom = direction === `up` ? `100%` : `-100%`\n\n  // convert ms to s for gsap\n  const seconds = length\n\n  return new TimelineMax()\n    .set(transitionCover, { y: directionFrom })\n    .to(transitionCover, seconds / 2, {\n      y: `0%`,\n      ease: Power1.easeInOut,\n    })\n    .set(layoutContents, { opacity: 0 })\n    .to(transitionCover, seconds / 2, {\n      y: directionTo,\n      ease: Power1.easeIn,\n    })\n}\n\nexport const test = (entry, node) =>\n  // eslint-disable-next-line implicit-arrow-linebreak\n  new TimelineMax().staggerFrom(\n    node.querySelectorAll(`h2, p, a, pre`),\n    1,\n    {\n      opacity: 0,\n      y: `+=50`,\n    },\n    0.1\n  )\n","import React, { useCallback, useLayoutEffect, useState } from 'react'\nimport { has, isObject, isUndefined } from 'lodash'\n// import * as PropTypes from 'prop-types'\nimport TransitionLink, { TransitionPortal } from 'gatsby-plugin-transition-link'\nimport AniLink from 'gatsby-plugin-transition-link/AniLink'\nimport { Location } from '@reach/router'\nimport useWindow from '../../../lib/hooks/useWindow'\nimport { test, verticalAnimation } from './animations'\n\nconst TransitionLinks = () => {\n  const win = useWindow()\n\n  const [currentPath, setCurrentPath] = useState()\n  const [layoutContents, setLayoutContents] = useState()\n  const [transitionCover, setTransitionCover] = useState()\n  const getLayoutContents = useCallback((n) => setLayoutContents(n), [])\n  const getTransitionCover = useCallback((n) => setTransitionCover(n), [])\n  let targetUrl = `/`\n\n  useLayoutEffect(() => {\n    if (!isUndefined(win)) {\n      targetUrl = win.location.pathname === `/` ? `/page-2` : `/`\n    }\n\n    if (isObject(win) && has(win, `location.pathname`)) {\n      setCurrentPath(win.location.pathname)\n    }\n  }, [win])\n\n  return (\n    <Location>\n      {({ location }) => (\n        <>\n          <section ref={getLayoutContents}>\n            <div>\n              <h2>Transition Links</h2>\n              {currentPath && <span>Path: {location.pathname}</span>}\n              <br/>\n              <AniLink cover to={targetUrl} direction=\"right\">\n                Go to a page, with a cover right\n              </AniLink>\n              <br/>\n              <AniLink paintDrip to={targetUrl} hex=\"#4b2571\">\n                Go to a page, with a paint drip\n              </AniLink>\n              <br/>\n              <TransitionLink\n                to={targetUrl}\n                exit={{\n                  length: 1,\n                  trigger: ({ exit }) =>\n                    verticalAnimation(transitionCover, layoutContents, exit, `down`),\n                  state: { test: `exit state` },\n                }}\n                entry={{\n                  delay: 0.5,\n                  trigger: ({ entry, node }) => test(entry, node),\n                }}\n              >\n                Go to a page, that way{` `}\n                <span aria-label=\"pointing up\" role=\"img\">\n                  👇\n                </span>\n                {` `}\n                and animate in the next page\n              </TransitionLink>\n              <br/>\n              <TransitionLink\n                to={targetUrl}\n                exit={{\n                  length: 1.2,\n                  trigger: ({ exit }) =>\n                    verticalAnimation(transitionCover, layoutContents, exit, `up`),\n                }}\n                entry={{\n                  delay: 0.5,\n                  length: 1,\n                  state: { layoutTheme: `dark` },\n                }}\n              >\n                Go to a page, that way{` `}\n                <span aria-label=\"pointing up\" role=\"img\">\n                  ☝️\n                </span>\n                and give us a dark theme when we get there.\n              </TransitionLink>\n              <br/>\n            </div>\n          </section>\n          <TransitionPortal>\n            <div\n              ref={getTransitionCover}\n              style={{\n                position: `fixed`,\n                background: `#4b2571`,\n                top: 0,\n                left: 0,\n                width: `100vw`,\n                height: `100vh`,\n                transform: `translateY(100%)`,\n              }}\n            />\n          </TransitionPortal>\n        </>\n      )}\n    </Location>\n  )\n}\n\nTransitionLinks.defaultProps = {}\nTransitionLinks.propTypes = {}\n\nexport default TransitionLinks\n","import React from 'react'\nimport * as PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport Image from '../../media/Image/Image'\nimport TransitionLinks from '../TransitionLinks/TransitionLinks'\n\nconst KitchenSink = ({ display }) => {\n  if (display) {\n    // todo.\n  }\n\n  return (\n    <div>\n      <TransitionLinks/>\n      <p>Welcome to your new Gatsby site.</p>\n      <p>Now go build something great.</p>\n      <div\n        style={{\n          maxWidth: `300px`,\n          marginBottom: `1.45rem`,\n        }}\n      >\n        <Image/>\n      </div>\n      <label htmlFor=\"abc\">\n        <span>Abc</span>\n        <input id=\"abc\" type=\"text\" name=\"abc\"/>\n      </label>\n      <Link to=\"/page-2/\">Go to page 2</Link>\n    </div>\n  )\n}\n\nKitchenSink.defaultProps = {\n  display: true,\n}\n\nKitchenSink.propTypes = {\n  display: PropTypes.bool,\n}\n\nexport default KitchenSink\n"],"sourceRoot":""}